<style type="text/css">
    #posts-chart,
    #categories-chart,
    #tags-chart {
        width: 100%;
        height: 300px;
        margin: 0.5rem auto;
        padding: 0.5rem;
    }
</style>



<div id="postCharts" class="post-charts">
    <div class="row">
        <div id="from" style="width:100%;height:70vw;" data-aos="zoom-in-up"></div>
    </div>
    <div class="row">
        <div id="to" style="width:100%;height:70vw;" data-aos="zoom-in-up"></div>
    </div>
    
</div>

<script src="https://cdn.bootcss.com/aos/2.3.4/aos.js"></script>
<script type="text/javascript" src="https://cdn.bootcdn.net/ajax/libs/echarts/4.8.0/echarts.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts@4.8.0/map/js/china.js"></script>
<script type="text/javascript" src="<%- theme.jsDelivr.url %>/js/world_new.js"></script>

<script type="text/javascript">
var fromChart = echarts.init(document.getElementById('from'));
var data = [
    {name: '北京', value: ['张霖']},
    {name: '泉州', value: ['黄昕睿']},
    {name: '南宁', value: ['韦镇源']},
    {name: '邯郸', value: ['唐川']},
    {name: '廊坊', value: ['吕国光']},
    {name: '张家口', value: ['窦星磊']},
    {name: '洛阳', value: ['侯逸骅']},
    {name: '郑州', value: ['李钦伦']},
    {name: '驻马店', value: ['霍昱周']},
    {name: '安阳', value: ['高英杰']},
    {name: '开封', value: ['孙婧伊']},
    {name: '漯河', value: ['陈鹏飞']},
    {name: '商丘', value: ['李岩']},
    {name: '信阳', value: ['刁永动']},
    {name: '大庆', value: ['叶子铭']},
    {name: '大冶', value: ['宋栿浒']},
    {name: '武汉', value: ['陶锴']},
    {name: '耒阳', value: ['张顺根']},
    {name: '四平', value: ['张翠','张健铭']},
    {name: '长春', value: ['太然','蒋璐宇','石雨鑫']},
    {name: '通化', value: ['于涛']},
    {name: '扬州', value: ['李静']},
    {name: '大连', value: ['郭安']},
    {name: '抚顺', value: ['于海川']},
    {name: '淄博', value: ['朱小谢']},
    {name: '烟台', value: ['宋嘉庚']},
    {name: '东营', value: ['王瀚橙']},
];
var province = [
    {name: '北京', value: 1},
    {name: '福建', value: 1},
    {name: '广西', value: 1},
    {name: '河北', value: 3},
    {name: '河南', value: 8},
    {name: '黑龙江', value: 1},
    {name: '湖北', value: 2},
    {name: '湖南', value: 1},
    {name: '吉林', value: 6},
    {name: '江苏', value: 1},
    {name: '辽宁', value: 2},
    {name: '山东', value: 3},
];
var geoCoordMap = {
	'驻马店':[113.99382,32.97319],
    '商丘':[115.61396,34.44379],
    '信阳':[114.05857,32.11683],
    '大冶':[114.97977,30.09551],
    '耒阳':[112.85988,26.42243],
    '漯河':[113.9202,33.54528],
    '廊坊':[116.68572,39.50311],
    '通化':[125.95513,41.7285],
    '四平':[124.41,43.16],
    '烟台':[121.39,37.52],
    '张家口':[114.87,40.82],
    '大连':[121.62,38.92],
    '长春':[125.35,43.88],
    '东营':[118.49,37.46],
    '扬州':[119.42,32.39],
    '北京':[116.46,39.92],
    '淄博':[118.05,36.78],
    '安阳':[114.35,36.1],
    '开封':[114.35,34.79],
    '邯郸':[114.47,36.6],
    '廊坊':[116.7,39.53],
    '武汉':[114.31,30.52],
    '大庆':[125.03,46.58],
    '泉州':[118.58,24.93],
    '南宁':[108.33,22.84],
    '抚顺':[123.97,41.97],
    '郑州':[113.65,34.76],
    '洛阳':[112.44,34.7]
};
function convertData(data) {
   var res = [];
   for (var i = 0; i < data.length; i++) {
       var geoCoord = geoCoordMap[data[i].name];
       if (geoCoord) {
           res.push({
               name: data[i].name,
               value: geoCoord,
               stus: data[i].value 
           });
       }
   }
   return res;
};
option = {
    title: {
        text: '卓班同学家乡统计',
        left: 'center'
    },
    tooltip: {},
    visualMap: {
        min: 1,
        max: 8,
        seriesIndex: [1],
        inRange: {
            color: ['#e0ffff', '#006edd']
        },
        calculable : false,
        show:false
    },
    geo: {
        map: 'china',
        roam: false,
        zoom: 1.2,
        label: {
            show: true,
            color: 'rgba(0,0,0,0.6)'
        },
        itemStyle: {
            borderColor: '#AAAAAA',
            areaColor:'#DDDDDD',
        },
        emphasis:{
            itemStyle: {
                areaColor: null,
                shadowOffsetX: 0,
                shadowOffsetY: 0,
                shadowBlur: 20,
                borderWidth: 0,
                shadowColor: 'rgba(0, 0, 0, 0.5)'
            }
        }
    },
    series : [
        {
            type: 'effectScatter',
            coordinateSystem: 'geo',
            data: convertData(data),
            symbolSize:(rawValue, params) => {
                params.symbolSize = params.data.stus.length*10
                return params.symbolSize
            },
            symbol: 'circle',
            symbolRotate: 0,
            label: {
                formatter: '{b}',
                position: 'right',
                show: false
            },
            itemStyle: {
                color: '#BB332F'
            },
            showEffectOn: 'emphasis',
            rippleEffect: {
                brushType: 'stroke'
            },
            hoverAnimation: true,
            emphasis: {
                label: {
                    show: true
                }
            },
            tooltip:{
                trigger:'item',
                formatter(params){
                    label='<b style="line-height:2; font-size:18px;">'+params.name+'</b><br/>'
                    label+=params.data.stus.join('，')
                    return label
                }
            }
        },
        {
            name: '地区人数',
            type: 'map',
            geoIndex: 0,
            data: province,
            tooltip:{
                trigger:'item',
                formatter(params){
                    if (isNaN(params.value)){
                        return '没有同学来自'+params.name
                    }else{
                        return params.value+'名同学来自'+params.name
                    }
                }
            }
        }
    ]
};
fromChart.setOption(option);
</script>



<script type="text/javascript">
var toChart = echarts.init(document.getElementById('to'));
var data = [
    {name: '长春', value: {'吉林大学':['张翠','李静','蒋璐宇','于涛','宋栿浒','唐川','陈鹏飞','太然']}},
    {name: '南京', value: {'南京大学':['朱小谢','郭安','刁永动','王瀚橙']}},
    {name: '北京', value: {'北京航空航天大学':['陶锴','叶子铭','高英杰'],'字节跳动':['侯逸骅'],'中国科学院软件研究所':['宋嘉庚'],'中国科学院计算技术研究所':['窦星磊']}},
    {name: '上海', value: {'上海交通大学':['张霖','张健铭','黄昕睿']}},
    {name: '沈阳', value: {'东北大学':['于海川']}},
    {name: '深圳', value: {'哈尔滨工业大学（深圳）':['孙婧伊']}},
    {name: '武汉', value: {'华中科技大学':['吕国光','李钦伦','张顺根']}},
    {name: '伦敦', value: {'帝国理工大学':['石雨鑫']}},
    {name: '墨尔本', value: {'墨尔本大学':['霍昱周']}}
];
var province=[
    {name: '吉林', value: 8},
    {name: '江苏', value: 4},
    {name: '北京', value: 6},
    {name: '上海', value: 3},
    {name: '辽宁', value: 1},
    {name: '广东', value: 1},
    {name: '湖北', value: 3},
    {name: 'United Kingdom', value: 1},
    {name: 'Australia', value: 1}
];
var geoCoordMap = {
    '上海':[121.48,31.22],
    '深圳':[114.07,22.62],
    '长春':[125.28845,43.83327],
    '南京':[118.8921,31.32751],
    '北京':[116.23128,40.22077],
    '沈阳':[123.46987,41.80515],
    '武汉':[114.02919,30.58203],
    '伦敦':[-0.1,51.5],
    '墨尔本':[145,-37.8]
};
var path=[
    {source:'长春',target:'南京'},
    {source:'长春',target:'北京'},
    {source:'长春',target:'上海'},
    {source:'长春',target:'沈阳'},
    {source:'长春',target:'深圳'},
    {source:'长春',target:'武汉'},
    {source:'长春',target:'伦敦'},
    {source:'长春',target:'墨尔本'}
];
var convertData = function (data) {
    var res = [];
    for (var i = 0; i < data.length; i++) {
        var geoCoord = geoCoordMap[data[i].name];
        var stuNum=0
        for (place in data[i].value){
            stuNum+=data[i].value[place].length    
        }
        if (geoCoord) {
            res.push({
                name: data[i].name,
                value: geoCoord,
                stuNum: stuNum,
                stus:data[i].value
            });
        }
    }
    return res;
};
var convertLine = function (data) {
    var res = [];
    for (var i = 0; i < data.length; i++) {
        var dataItem = data[i];
        var fromCoord = geoCoordMap[dataItem.source];
        var toCoord = geoCoordMap[dataItem.target];
        if (fromCoord && toCoord) {
            res.push({
                fromName: dataItem.source,
                toName: dataItem.target,
                coords: [fromCoord, toCoord]
            }); 
        }
    }
    return res;
};
var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';
option = {
    title: {
        text: '卓班同学毕业去向统计',
        left: 'center'
    },
    tooltip : {
        trigger: 'item'
    },
    visualMap: {
        min: 1,
        max: 8,
        seriesIndex: [2],
        inRange: {
            color: ['#e0ffff', '#006edd']
        },
        calculable : false,
        show:false
    },
    geo: {
        center: [108.93425,34.23053],
        zoom: 5,
        roam: true,
        map: ['world'],
        label: {
            show: true,
            color: 'rgba(0,0,0,0.6)'
        },
        itemStyle: {
            borderColor: '#AAAAAA',
            areaColor:'#DDDDDD',
        },
        emphasis:{
            itemStyle: {
                areaColor: null,
                shadowOffsetX: 0,
                shadowOffsetY: 0,
                shadowBlur: 20,
                borderWidth: 0,
                shadowColor: 'rgba(0, 0, 0, 0.5)'
            }
        }
    },
    series : [
            {
            type: 'effectScatter',
            coordinateSystem: 'geo',
            data: convertData(data),
            symbol: 'circle', 
            rippleEffect: {
                brushType: 'stroke'
            },
            label: {
                show: false,
                position: 'right',
                formatter: '{b}'
            },
            symbolSize: (rawValue, params) => {
                params.symbolSize = Math.log2(params.data.stuNum*10)*3
                return params.symbolSize
            },
            itemStyle: {
                color: '#BB332F'
            },
            emphasis: {
                label: {
                    show: true
                }
            },
            tooltip: {
                trigger:'item',
                formatter(params){
                    label='<b style="line-height:2; font-size:18px;">'+params.name+'</b><br/>'
                    console.log(params)
                    for (p in params.data.stus){
                        label+='<b>'+p+'</b>：<br/>'
                        label+=params.data.stus[p].join('，')
                        label+='<br/>'
                    }
                    return label
                }
            }
        },{
            type: 'lines',
            coordinateSystem: 'geo',
            symbol: ['none', 'arrow'],
            symbolSize: 10,
            effect: {
                show: true,
                period: 6,
                trailLength: 0,
                symbol: planePath, 
                symbolSize: 15
            },
            lineStyle: {
                color: '#BB332F',
                width: 1,
                opacity: 0.6,
                curveness: 0.2
            },
            data: convertLine(path)
        },
        {
            name: '地区人数',
            type: 'map',
            geoIndex: 0,
            data: province,
            tooltip:{
                trigger:'item',
                formatter(params){
                    if (isNaN(params.value)){
                        return '没有同学在'+params.name+'深造/工作'
                    }else{
                        return params.value+'名同学将在'+params.name+'深造/工作'
                    }
                }
            }
        }
    ]
};
toChart.setOption(option);
</script>